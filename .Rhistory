type='C-svc')
y_hat_csvm = predict(csvm_spam, spamdata[,-1])
mean(y_hat_csvm!=spamdata[,1])
v.c
# Use optimal value of C below to re-run SVM
csvm_spam =   ksvm(spam~., data=spamdata, cross=5, C= 7,
type='C-svc')
y_hat_csvm = predict(csvm_spam, spamdata[,-1])
mean(y_hat_csvm!=spamdata[,1])
# Use optimal value of C below to re-run SVM
csvm_spam =   ksvm(spam~., data=spamdata, cross=5, C= 20,
type='C-svc')
y_hat_csvm = predict(csvm_spam, spamdata[,-1])
mean(y_hat_csvm!=spamdata[,1])
# Use optimal value of C below to re-run SVM
csvm_spam =   ksvm(spam~., data=spamdata, cross=5, C= 34,
type='C-svc')
y_hat_csvm = predict(csvm_spam, spamdata[,-1])
mean(y_hat_csvm!=spamdata[,1])
# Use optimal value of C below to re-run SVM
csvm_spam =   ksvm(spam~., data=spamdata, cross=5, C= 40,
type='C-svc')
y_hat_csvm = predict(csvm_spam, spamdata[,-1])
mean(y_hat_csvm!=spamdata[,1])
# calculate accuracy of the 'regular' C-SVM run earlier
mean(csvm_errors$errors)
csvm_errors
view(csvm_errors)
# calculate accuracy of the 'regular' C-SVM run earlier
mean(csvm_errors)
1 - mean(csvm_errors)
# Use optimal value of C below to re-run SVM
csvm_spam =   ksvm(spam~., data=spamdata, cross=5, C= 27,
type='C-svc')
y_hat_csvm = predict(csvm_spam, spamdata[,-1])
mean(y_hat_csvm!=spamdata[,1])
mod_names = c('RF', 'OptRF',
'WRF', 'OptWRF',
'CSVM', 'OptCSVM')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
ggplot(spamdata, aes(x = mod_names, y = mod_acrcy)) + geom_bar()
mod_names = c('RF', 'OptRF',
'WRF', 'OptWRF',
'CSVM', 'OptCSVM')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
err_comp = cbind(mod_names, mod_acrcy)
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy)) + geom_bar()
mod_names = c('RF', 'OptRF',
'WRF', 'OptWRF',
'CSVM', 'OptCSVM')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
err_comp = data.frame(cbind(mod_names, mod_acrcy))
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy)) + geom_bar()
View(err_comp)
mod_names = c('RF', 'OptRF',
'WRF', 'OptWRF',
'CSVM', 'OptCSVM')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
err_comp = data.frame(cbind(mod_names, mod_acrcy))
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy)) + geom_point()
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy)) + geom_col()
mod_names = c('RF', 'OptRF',
'WRF', 'OptWRF',
'CSVM', 'OptCSVM')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
err_comp = data.frame(cbind(mod_names, mod_acrcy)) %>% arrange(mod_acrc)
mod_names = c('RF', 'OptRF',
'WRF', 'OptWRF',
'CSVM', 'OptCSVM')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
err_comp = data.frame(cbind(mod_names, mod_acrcy)) %>% arrange(mod_acrcy)
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy)) + geom_col()
mod_names = c('RF', 'RF_Opt',
'WRF', 'WRF_Opt',
'CSVM', 'CSVM_Opt')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
err_comp = data.frame(cbind(mod_names, mod_acrcy)) %>% arrange(mod_acrcy)
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy)) + geom_col()
mod_names = c('RF', 'RF_Opt',
'WRF', 'WRF_Opt',
'CSVM', 'CSVM_Opt')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
mod_type = c(1,1,2,2,3,3)
err_comp = data.frame(cbind(mod_names, mod_acrcy, mod_type))
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy, color = mod_type)) + geom_col()
mod_names = c('RF', 'RF_Opt',
'WRF', 'WRF_Opt',
'CSVM', 'CSVM_Opt')
mod_acrcy = c(1 - mean(rf_errors$errors), 0.9528372,
1 - mean(weighted_rf_errors$errors), 0.9504452,
1 - mean(csvm_errors), 0.9831)
mod_type = c(1,1,2,2,3,3)
err_comp = data.frame(cbind(mod_names, mod_acrcy, mod_type))
ggplot(err_comp, aes(x = mod_names, y = mod_acrcy, fill = mod_type)) + geom_col()
library(tidyverse)
library(NbClust)
library(cluster)
library(mclust)
setwd("C:/Users/tonyg/Google Drive/Notre Dame/DS64630 Behavioral Data Science/BDS Week 8")
wk8_dat = read.csv('BDS_WK08_PUBG_Player_Statistics.csv')
setwd("C:/Users/tonyg/Google Drive/Notre Dame/DS64630 Behavioral Data Science/BDS Week 8")
wk8_dat = read.csv('BDS_WK08_PUBG_Player_Statistics.csv', header = T)
setwd("C:/Users/tonyg/Google Drive/Notre Dame/DS64630 Behavioral Data Science/BDS Week 8")
wk8_dat = read.csv('BDS_WK08_PUBG_Player_Statistics.csv', header = F)
summary(wk8_dat)
View(wk8_dat)
dat = wk8_dat
kTest = NbClust(dat, method = "kmeans")
dat = wk8_dat %>% select(-V1)
dat = wk8_dat %>% dplyr::select(-V1)
kTest = NbClust(dat, method = "kmeans")
setwd("C:/Users/tonyg/Google Drive/Notre Dame/DS64630 Behavioral Data Science/BDS Week 8")
wk8_dat = read.csv('BDS_WK08_PUBG_Player_Statistics.csv', header = F)
head(wk8_dat)
names = c('player_name',
'tracker_id',
'solo_KillDeathRatio',
'solo_WinRatio',
'solo_TimeSurvived',
'solo_RoundsPlayed',
'solo_Wins',
'solo_WinTop10Ratio',
'solo_Top10s',
'solo_Top10Ratio',
'solo_Losses',
'solo_Rating',
'solo_BestRating',
'solo_DamagePg',
'solo_HeadshotKillsPg',
'solo_HealsPg',
'solo_KillsPg',
'solo_MoveDistancePg',
'solo_RevivesPg',
'solo_RoadKillsPg',
'solo_TeamKillsPg',
'solo_TimeSurvivedPg',
'solo_Top10sPg',
'solo_Kills',
'solo_Assists',
'solo_Suicides',
'solo_TeamKills',
'solo_HeadshotKills',
'solo_HeadshotKillRatio',
'solo_VehicleDestroys',
'solo_RoadKills',
'solo_DailyKills',
'solo_WeeklyKills',
'solo_RoundMostKills',
'solo_MaxKillStreaks',
'solo_WeaponAcquired',
'solo_Days',
'solo_LongestTimeSurvived',
'solo_MostSurvivalTime',
'solo_AvgSurvivalTime',
'solo_WinPoints',
'solo_WalkDistance',
'solo_RideDistance',
'solo_MoveDistance',
'solo_AvgWalkDistance',
'solo_AvgRideDistance',
'solo_LongestKill',
'solo_Heals',
'solo_Revives',
'solo_Boosts',
'solo_DamageDealt',
'solo_DBNOs',
'duo_KillDeathRatio',
'duo_WinRatio',
'duo_TimeSurvived',
'duo_RoundsPlayed',
'duo_Wins',
'duo_WinTop10Ratio',
'duo_Top10s',
'duo_Top10Ratio',
'duo_Losses',
'duo_Rating',
'duo_BestRating',
'duo_DamagePg',
'duo_HeadshotKillsPg',
'duo_HealsPg',
'duo_KillsPg',
'duo_MoveDistancePg',
'duo_RevivesPg',
'duo_RoadKillsPg',
'duo_TeamKillsPg',
'duo_TimeSurvivedPg',
'duo_Top10sPg',
'duo_Kills',
'duo_Assists',
'duo_Suicides',
'duo_TeamKills',
'duo_HeadshotKills',
'duo_HeadshotKillRatio',
'duo_VehicleDestroys',
'duo_RoadKills',
'duo_DailyKills',
'duo_WeeklyKills',
'duo_RoundMostKills',
'duo_MaxKillStreaks',
'duo_WeaponAcquired',
'duo_Days',
'duo_LongestTimeSurvived',
'duo_MostSurvivalTime',
'duo_AvgSurvivalTime',
'duo_WinPoints',
'duo_WalkDistance',
'duo_RideDistance',
'duo_MoveDistance',
'duo_AvgWalkDistance',
'duo_AvgRideDistance',
'duo_LongestKill',
'duo_Heals',
'duo_Revives',
'duo_Boosts',
'duo_DamageDealt',
'duo_DBNOs',
'squad_KillDeathRatio',
'squad_WinRatio',
'squad_TimeSurvived',
'squad_RoundsPlayed',
'squad_Wins',
'squad_WinTop10Ratio',
'squad_Top10s',
'squad_Top10Ratio',
'squad_Losses',
'squad_Rating',
'squad_BestRating',
'squad_DamagePg',
'squad_HeadshotKillsPg',
'squad_HealsPg',
'squad_KillsPg',
'squad_MoveDistancePg',
'squad_RevivesPg',
'squad_RoadKillsPg',
'squad_TeamKillsPg',
'squad_TimeSurvivedPg',
'squad_Top10sPg',
'squad_Kills',
'squad_Assists',
'squad_Suicides',
'squad_TeamKills',
'squad_HeadshotKills',
'squad_HeadshotKillRatio',
'squad_VehicleDestroys',
'squad_RoadKills',
'squad_DailyKills',
'squad_WeeklyKills',
'squad_RoundMostKills',
'squad_MaxKillStreaks',
'squad_WeaponAcquired',
'squad_Days',
'squad_LongestTimeSurvived',
'squad_MostSurvivalTime',
'squad_AvgSurvivalTime',
'squad_WinPoints',
'squad_WalkDistance',
'squad_RideDistance',
'squad_MoveDistance',
'squad_AvgWalkDistance',
'squad_AvgRideDistance',
'squad_LongestKill',
'squad_Heals',
'squad_Revives',
'squad_Boosts',
'squad_DamageDealt',
'squad_DBNOs')
names(wk8_dat) = wk8_names
wk8_names = c('player_name',
'tracker_id',
'solo_KillDeathRatio',
'solo_WinRatio',
'solo_TimeSurvived',
'solo_RoundsPlayed',
'solo_Wins',
'solo_WinTop10Ratio',
'solo_Top10s',
'solo_Top10Ratio',
'solo_Losses',
'solo_Rating',
'solo_BestRating',
'solo_DamagePg',
'solo_HeadshotKillsPg',
'solo_HealsPg',
'solo_KillsPg',
'solo_MoveDistancePg',
'solo_RevivesPg',
'solo_RoadKillsPg',
'solo_TeamKillsPg',
'solo_TimeSurvivedPg',
'solo_Top10sPg',
'solo_Kills',
'solo_Assists',
'solo_Suicides',
'solo_TeamKills',
'solo_HeadshotKills',
'solo_HeadshotKillRatio',
'solo_VehicleDestroys',
'solo_RoadKills',
'solo_DailyKills',
'solo_WeeklyKills',
'solo_RoundMostKills',
'solo_MaxKillStreaks',
'solo_WeaponAcquired',
'solo_Days',
'solo_LongestTimeSurvived',
'solo_MostSurvivalTime',
'solo_AvgSurvivalTime',
'solo_WinPoints',
'solo_WalkDistance',
'solo_RideDistance',
'solo_MoveDistance',
'solo_AvgWalkDistance',
'solo_AvgRideDistance',
'solo_LongestKill',
'solo_Heals',
'solo_Revives',
'solo_Boosts',
'solo_DamageDealt',
'solo_DBNOs',
'duo_KillDeathRatio',
'duo_WinRatio',
'duo_TimeSurvived',
'duo_RoundsPlayed',
'duo_Wins',
'duo_WinTop10Ratio',
'duo_Top10s',
'duo_Top10Ratio',
'duo_Losses',
'duo_Rating',
'duo_BestRating',
'duo_DamagePg',
'duo_HeadshotKillsPg',
'duo_HealsPg',
'duo_KillsPg',
'duo_MoveDistancePg',
'duo_RevivesPg',
'duo_RoadKillsPg',
'duo_TeamKillsPg',
'duo_TimeSurvivedPg',
'duo_Top10sPg',
'duo_Kills',
'duo_Assists',
'duo_Suicides',
'duo_TeamKills',
'duo_HeadshotKills',
'duo_HeadshotKillRatio',
'duo_VehicleDestroys',
'duo_RoadKills',
'duo_DailyKills',
'duo_WeeklyKills',
'duo_RoundMostKills',
'duo_MaxKillStreaks',
'duo_WeaponAcquired',
'duo_Days',
'duo_LongestTimeSurvived',
'duo_MostSurvivalTime',
'duo_AvgSurvivalTime',
'duo_WinPoints',
'duo_WalkDistance',
'duo_RideDistance',
'duo_MoveDistance',
'duo_AvgWalkDistance',
'duo_AvgRideDistance',
'duo_LongestKill',
'duo_Heals',
'duo_Revives',
'duo_Boosts',
'duo_DamageDealt',
'duo_DBNOs',
'squad_KillDeathRatio',
'squad_WinRatio',
'squad_TimeSurvived',
'squad_RoundsPlayed',
'squad_Wins',
'squad_WinTop10Ratio',
'squad_Top10s',
'squad_Top10Ratio',
'squad_Losses',
'squad_Rating',
'squad_BestRating',
'squad_DamagePg',
'squad_HeadshotKillsPg',
'squad_HealsPg',
'squad_KillsPg',
'squad_MoveDistancePg',
'squad_RevivesPg',
'squad_RoadKillsPg',
'squad_TeamKillsPg',
'squad_TimeSurvivedPg',
'squad_Top10sPg',
'squad_Kills',
'squad_Assists',
'squad_Suicides',
'squad_TeamKills',
'squad_HeadshotKills',
'squad_HeadshotKillRatio',
'squad_VehicleDestroys',
'squad_RoadKills',
'squad_DailyKills',
'squad_WeeklyKills',
'squad_RoundMostKills',
'squad_MaxKillStreaks',
'squad_WeaponAcquired',
'squad_Days',
'squad_LongestTimeSurvived',
'squad_MostSurvivalTime',
'squad_AvgSurvivalTime',
'squad_WinPoints',
'squad_WalkDistance',
'squad_RideDistance',
'squad_MoveDistance',
'squad_AvgWalkDistance',
'squad_AvgRideDistance',
'squad_LongestKill',
'squad_Heals',
'squad_Revives',
'squad_Boosts',
'squad_DamageDealt',
'squad_DBNOs')
names(wk8_dat) = wk8_names
dat = wk8_dat %>% dplyr::select(-V1)
View(wk8_dat)
dat = wk8_dat %>% dplyr::select(starts_with('solo'))
summary(dat)
dat = wk8_dat %>% dplyr::select(starts_with('solo')) %>% scale()
summary(dat)
kTest = NbClust(dat, method = "kmeans")
dat = wk8_dat %>% dplyr::select(starts_with('solo')) # %>% scale()
summary(dat)
dat$solo_WeaponAcquired
summary(dat$solo_WeaponAcquired)
unique(dat$solo_WeaponAcquired)
table(dat$solo_WeaponAcquired)
table(dat$solo_WinRatio)
table(dat$solo_RoadKillsPg)
table(dat$solo_TeamKills)
table(dat$solo_DBNOs)
table(dat$solo_Revives)
summary(wk8_dat)
wk8_dat %>% dplyr::select(starts_with('solo')) %>% summary
table(dat$solo_Revives)
table(dat$solo_WeaponAcquired)
wk8_names = c('player_name', 'tracker_id', 'solo_KillDeathRatio',
'solo_WinRatio', 'solo_TimeSurvived', 'solo_RoundsPlayed',
'solo_Wins', 'solo_WinTop10Ratio', 'solo_Top10s',
'solo_Top10Ratio', 'solo_Losses', 'solo_Rating',
'solo_BestRating', 'solo_DamagePg', 'solo_HeadshotKillsPg',
'solo_HealsPg', 'solo_KillsPg', 'solo_MoveDistancePg',
'solo_RevivesPg', 'solo_RoadKillsPg', 'solo_TeamKillsPg',
'solo_TimeSurvivedPg', 'solo_Top10sPg', 'solo_Kills',
'solo_Assists', 'solo_Suicides', 'solo_TeamKills',
'solo_HeadshotKills', 'solo_HeadshotKillRatio', 'solo_VehicleDestroys',
'solo_RoadKills', 'solo_DailyKills', 'solo_WeeklyKills',
'solo_RoundMostKills', 'solo_MaxKillStreaks', 'solo_WeaponAcquired',
'solo_Days', 'solo_LongestTimeSurvived', 'solo_MostSurvivalTime',
'solo_AvgSurvivalTime', 'solo_WinPoints', 'solo_WalkDistance',
'solo_RideDistance', 'solo_MoveDistance', 'solo_AvgWalkDistance',
'solo_AvgRideDistance', 'solo_LongestKill', 'solo_Heals',
'solo_Revives', 'solo_Boosts', 'solo_DamageDealt',
'solo_DBNOs', 'duo_KillDeathRatio', 'duo_WinRatio',
'duo_TimeSurvived', 'duo_RoundsPlayed', 'duo_Wins',
'duo_WinTop10Ratio', 'duo_Top10s', 'duo_Top10Ratio',
'duo_Losses', 'duo_Rating', 'duo_BestRating',
'duo_DamagePg', 'duo_HeadshotKillsPg', 'duo_HealsPg',
'duo_KillsPg', 'duo_MoveDistancePg', 'duo_RevivesPg',
'duo_RoadKillsPg', 'duo_TeamKillsPg', 'duo_TimeSurvivedPg',
'duo_Top10sPg', 'duo_Kills', 'duo_Assists',
'duo_Suicides', 'duo_TeamKills', 'duo_HeadshotKills',
'duo_HeadshotKillRatio', 'duo_VehicleDestroys', 'duo_RoadKills',
'duo_DailyKills', 'duo_WeeklyKills', 'duo_RoundMostKills',
'duo_MaxKillStreaks', 'duo_WeaponAcquired', 'duo_Days',
'duo_LongestTimeSurvived', 'duo_MostSurvivalTime', 'duo_AvgSurvivalTime',
'duo_WinPoints', 'duo_WalkDistance', 'duo_RideDistance',
'duo_MoveDistance', 'duo_AvgWalkDistance', 'duo_AvgRideDistance',
'duo_LongestKill', 'duo_Heals', 'duo_Revives',
'duo_Boosts', 'duo_DamageDealt', 'duo_DBNOs',
'squad_KillDeathRatio', 'squad_WinRatio', 'squad_TimeSurvived',
'squad_RoundsPlayed', 'squad_Wins', 'squad_WinTop10Ratio',
'squad_Top10s', 'squad_Top10Ratio', 'squad_Losses',
'squad_Rating', 'squad_BestRating', 'squad_DamagePg',
'squad_HeadshotKillsPg', 'squad_HealsPg', 'squad_KillsPg',
'squad_MoveDistancePg', 'squad_RevivesPg', 'squad_RoadKillsPg',
'squad_TeamKillsPg', 'squad_TimeSurvivedPg', 'squad_Top10sPg',
'squad_Kills', 'squad_Assists', 'squad_Suicides',
'squad_TeamKills', 'squad_HeadshotKills', 'squad_HeadshotKillRatio',
'squad_VehicleDestroys', 'squad_RoadKills', 'squad_DailyKills',
'squad_WeeklyKills', 'squad_RoundMostKills', 'squad_MaxKillStreaks',
'squad_WeaponAcquired', 'squad_Days', 'squad_LongestTimeSurvived',
'squad_MostSurvivalTime', 'squad_AvgSurvivalTime', 'squad_WinPoints',
'squad_WalkDistance', 'squad_RideDistance', 'squad_MoveDistance',
'squad_AvgWalkDistance', 'squad_AvgRideDistance', 'squad_LongestKill',
'squad_Heals', 'squad_Revives', 'squad_Boosts',
'squad_DamageDealt', 'squad_DBNOs')
names(wk8_dat) = wk8_names
dat = wk8_dat %>% dplyr::select(starts_with('solo'))  %>% scale()
summary(dat)
